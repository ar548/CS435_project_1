public class Main {

    public static void main(String[] args) {

    	long s = System.currentTimeMillis();

	    // for(int i = 0; i < 10000; i++) {

		    LargeInt A = LargeInt.readInt( "2222" );
		    System.out.println(A);
		    // in decimal A = 8738

		    LargeInt B = LargeInt.readInt( "99999999" );
		    System.out.println(B);
		    // in decimal B = 2576980377

		    LargeInt C = LargeInt.readInt( "246813575732" );
		    System.out.println(C);
		    // in decimal C = 40029419689778

		    LargeInt D = LargeInt.readInt( "180270361023456789" );
		    System.out.println(D);
		    // in decimal D = 442897557597435815817

		    LargeInt E = LargeInt.add( A, B );
		    System.out.println(E);
		    // in decimal E = 2576989115

		    LargeInt F = LargeInt.exponent( A, 2 );
		    System.out.println(F);
		    // in decimal F = 76352644

		    LargeInt G = LargeInt.exponent( D, 2 );
		    System.out.println(G);
		    // in decimal G = 196158246525773975936232072158924347377489

		    LargeInt H = LargeInt.multiply( B, C );
		    System.out.println(H);
		    // in decimal H = 103155029043255333486306

		    LargeInt I = LargeInt.add( A, D );
		    System.out.println(I);
		    // in decimal I = 442897557597435824555

		    LargeInt J = LargeInt.exponent( I, 2 );
		    System.out.println(J);
		    // in decimal J = 196158246525773983676309788731712740948025

		    LargeInt K = LargeInt.subtract( J, F );
		    System.out.println(K);
		    // in decimal K = 196158246525773983676309788731712664595381

		    LargeInt L = LargeInt.subtract( K, G );
		    System.out.println(L);
		    // in decimal L = 7740077716572788317217892

		    // LargeInt M = LargeInt.divide(L, E);
		    // System.out.println(M);

		    LargeInt N = LargeInt.exponent( E, 5 );
		    System.out.println(N);
		    //in decimal N = 137392356821298039311909378946970244106996621889994823885645131765232267

		    LargeInt O = LargeInt.exponent( H, 3 );
		    System.out.println(O);
		    // in decimal O = 373517248747345750122832435558156920655672461593016219153076234641158720108902965129728575659002930653497992

		    LargeInt P = LargeInt.subtract( N, O );
		    System.out.println(P);
		    // in decimal P = 39377527369980573161198990153685553274333071055774937406880462643490488133242514660487673692245126289499811536283651

		    LargeInt Q = LargeInt.exponent( N, 2 );
		    System.out.println(Q);
		    // in decimal Q = 15614406944280682787225047896796936334781074488193451896181139984379119788126014227880606925634298528872911544479487865

		    LargeInt R = LargeInt.exponent( O, 2 );
		    System.out.println(R);
		    // in decimal R = 115368645428435481797525450449898169894557451974808808880303228319749319645412066115906548774689515139140732336809659334298464017930500912905081054339354035699869568599942904821432342634489920

		    LargeInt S = LargeInt.subtract( Q, R );
		    System.out.println(S);
		    // in decimal R = -361473647242517607228175417663029534193743548095671497469384594596079530056359178372334836059809213406988523740893328382960521059143834544858968296816905714979376343469134933808288941857252644100317853106941036837191987001

		    // LargeInt T = LargeInt.divide(S, P);
		    // System.out.println(T);

		    // LargeInt U = LargeInt.subtract( T, O );
		    // // System.out.println(U);

		    // LargeInt V = LargeInt.subtract( U, N );
		    // // System.out.println(V);

		    LargeInt W = LargeInt.exponent( C, 2 );
		    System.out.println(W);
		    // in decimal W = 1602354440700386633757689284

		    LargeInt X = LargeInt.exponent( B, 2 );
		    System.out.println(X);
		    // in decimal X = 6640827863443062129

		    LargeInt Y = LargeInt.subtract( W, X );
		    System.out.println(Y);
		    // in decimal Y = 1602354434059558770314627155

		    LargeInt Z = LargeInt.add( C, B );
		    System.out.println(Z);
		    //  in decimal Z = 40031996670155

		    // LargeInt H = LargeInt.divide(Y, Z);
		    // // System.out.println(H);

		    F = LargeInt.exponent( N, 5 );
		    System.out.println(F);
		    // in decimal F = 1091772731261382483879040504205337340811968990376422005774147528991272637593913094512636536761141534097562836285399699097155615078960955564509651066476167328983777887690851539108152639543845165223692108334251019522354721301361805186479665361059431039995948876030328769792672418177084104645964194474457770601109046404025348851255138779188768176096212388635311580487817773574066513287173612746397141403

		    G = LargeInt.exponent( E, 25 );
		    System.out.println(G);
		    // in decimal G = 11398163728707581707336177439134164706756823948828235129534195816419535479205894872624622481754536392472632972625109836327074474383303279625875370703101035959315852158237386062106814314587725533011740222330335858675447788221361356732908704968193043172523866698208277919385114856690546919117143444882730791817593867443895662778022352039554558937499

		    // LargeInt I = LargeInt.divide(F, N);
		    // // System.out.println(I);

		    // LargeInt J = LargeInt.divide(G, I);
		    // // System.out.println(J);

		    LargeInt M = LargeInt.exponent( N, 10 );
		    System.out.println(M);
		    // in decimal M = 44212538954056784376574102121802580959918807147819195966865955866736334614221584596951137775008203493382431716660575726393370840173172424326239970661280416068096743682156233563745221181971412605902229852931864590593277050126827215364896961116589948416250648455762913352235648048276883870895067118300983750904058588682332761735900557914715547488966524738211026393465846105833038670598557514994360365626087580119310266918724204661502387650881253513789210474413744377856350462013527983093851150789000849362495837397136251082506459338664809332658888709844655240173020198220048812389536456467854189066695294423240327370164721760506106367343990005367200949519631975725568764136514743183036277934518079458883418782832750981462823899743193

		    P = LargeInt.exponent( G, 2 );
		    System.out.println(P);
		    // in decimal P = 30248923297508297655250763714065076423351496244876829462347346108827906841131089284432245302494585346134902282638289671191399523383455578936581210864509496001809191622152813293698643228964503152366387793846516496670393727538824375692608519803952919445319216419976091320873028827116625301271622096329465120060091903912316973944254675977815815469556520704508786288884377188532110330943585062552465010172745070086800759879342666908832434642138582163835573954724829114017173795434423922734393144456534179497725986140747043648433895579413540440443269570240151347011256622937083863237405056376212457524104689697568782604803092054926934563170064612582163911187659939726543223368829729227737

		    Q = LargeInt.subtract( P, M );
		    System.out.println(Q);
		    // in decimal Q = -154606681334141413947343276055115202222714529757824987191814178842053879775452297532490818725398616307255658153061339876265084146904762527118951589359688117904274526793891950225591850733749449143938628860607551325259068256480775527588002417809526484207707321425649138787662196280363490937651928872814675927122533046700902967295877175818766914021453110389141744310034540482382122004649625188428697323594183936390596234790217697292334915319187117699579267575784453445017148879365331761504634461651096975627910983946893397398551430588679039311114689963320039507145256708412775278391008386573762577735141870875030325233217982159762661999786517096588750633659872855050565319782447199560423494229004146276491246977861213914280283483951632201361125559607937251354302966937163051566593119271576714532497439244040690749931520

		    R = LargeInt.subtract( J, M );
		    System.out.println(R);
		    // in decimal R = -4743614043447779480692543585592566499581536086756737366290565444346340279131438101163722872562034215221921638722185562940624919157065714369329819735649352431682571076215745275506357174369578924537667003558166942612053701598302269692754325381044579344484695823878685812841977574136875088126533087909561225266131713622950168641927763219640828046908079558564628732479059325065354883805763028222433365845516439186070635589537060970309295226533461025670153668722814485903216177239435682242250506860330122964078144644650856837083800224960943912170617038889030278574953241180606963731411519534361440372207453285398386828208353529521689089068337560068493763720757334349752703435889204497620374214068888246335941804659951722344658016

	    //}

	    long e = System.currentTimeMillis();
	    System.out.println("total time:  " + (e-s));
	    System.out.println(R);

	    A.MAKENULL();
	    B.MAKENULL();
	    C.MAKENULL();
	    D.MAKENULL();
	    E.MAKENULL();
	    F.MAKENULL();
	    G.MAKENULL();
	    H.MAKENULL();
	    I.MAKENULL();
	    J.MAKENULL();
	    K.MAKENULL();
	    L.MAKENULL();
	    M.MAKENULL();
	    N.MAKENULL();
	    O.MAKENULL();
	    P.MAKENULL();
	    Q.MAKENULL();
	    R.MAKENULL();
	    S.MAKENULL();
	    //T.MAKENULL();
	    //U.MAKENULL();
	    //V.MAKENULL();
	    W.MAKENULL();
	    X.MAKENULL();
	    Y.MAKENULL();
	    Z.MAKENULL();

    }
}
